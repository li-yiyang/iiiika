#+title: IIIIka
#+author: 凉凉
* About 关于
IIIIka is a simple program that help with "writing"
Chinese-like name in [[https://www.nintendo.com/jp/switch/av5ja/index.html][Splatoon]], since you cannot really
type Chinese in the game.

IIIIka 是个用于在 [[https://www.nintendo.com/jp/switch/av5ja/index.html][Splatoon]] 中辅助生成类似汉字输入的工具,
毕竟你没法真的在游戏里面输入中文名称.

*NOTE*: IIIIka is still incomplete... Current version
is only for testing how Github Page works.

*注*: IIIIka 现在的版本是不完整的...
当前的版本只是用于测试如何使用 Github Page.

* Contribute 如何参与贡献
** Extending Rules 增加规则
The rules be defined by =defrule*= (or =defrule=).

映射规则由 =defrule*= (或 =defrule=) 进行定义.

Please refer to =lisp/base.lisp= for editing
and extending the base rules.

请修改 =lisp/base.lisp= 来修改基本的规则.

Example:

#+name: defrule-example
#+begin_src lisp
  (defrule*
    ("我" "チギ")
    ("久" "ク、")
    ("人" "ノ、"))
#+end_src

** The front-end   修改前端
Please refer to =jscl= for code.

请参考 =jscl= 目录下的代码以了解如何修改前端.

If you're good with CSS and HTML beautifing,
helps are needed.

假如你擅长编写漂亮的 CSS 与 HTML, 请务必帮帮我.

** More Low-level  修改底层
Please refer to [[How it works 工作原理][How it works]] for principle.
The core logic is under two part:

逻辑思路请参考 [[How it works 工作原理][工作原理]] 一节.
核心逻辑在以下两个部分中:

+ =lisp/characters.lisp=
+ =lisp/core.lisp=

Note: you may found some useful scripts (under =scripts=)
while patching with IIIIka.

注: 你可以在 =scripts= 下找到一些有用的工具脚本.

Warning: since [[https://github.com/jscl-project/jscl][JSCL]] isn't complete Common Lisp,
you need to be careful when patching with IIIIka
to make it JSCL compatible.

注: 因为 [[https://github.com/jscl-project/jscl][JSCL]] 并非完整的 Common Lisp,
你可能需要使用一些特殊的操作才能使得 IIIIka
的代码能够在 JSCL 上运行.

* How it works 工作原理
The core code is under =lisp/core.lisp=.

核心代码见 =lisp/core.lisp=.

The main process is like a DFA (determine finite automation),
the characters in =iiiika::*rule-table*= is mapped to expanding
list, whose elements are terminate characters or other characters
in the rule table.

核心的逻辑类似于 DFA (确定有限自动机, 可以参考 [[https://li-yiyang.github.io/misc/simple-regexp-for-parser/][A Simple Regexp for Parser]]),
在 =iiiika::*rule-table*= 中, 每个字符被映射为一个展开规则列表,
列表中的每个元素为终止字符或是指向其他的展开规则.

* FAQ
+ What is IIIIka?

  为什么叫作 IIIIka?

  Because =ika= (イカ) in Japanese stands for the characters (inking)
  in the game. While in the game, =ikasu= (イカス) stands for the
  phrase "nice", "cool". So there are four (in Chinese, number 4 reads
  like =/s/=, or ス in Japanese) =I= in =IIIIka=, standing for the =ikasu= (イカス),
  or in Chinese version: 鱿型 (有型, nice, cool).

  游戏的角色在日语中为 =ika= (イカ, 鱿鱼). 并且在游戏中 =ikasu= (イカス,
  鱿型) 表示有型. 所以用四个 =I= 表示 イカス, 即鱿型的意思.
+ Cannot work with my input, but return =ロ= instead.

  我的输入不会被转换而是会输出 =ロ=.

  Because current rules are small, mostly is from what I met in
  the game. If you known some missing rules, please help to
  contribute =base.lisp=.

  因为当前的规则集比较有小 (主要是我在打游戏的时候遇到的).
  假如你知道一些额外的规则, 请帮忙添加进入 =base.lisp=.

* Credits 致谢
Note: English may not exactly translated to Chinese in this part.

+ *Nintendo*

  Thanks for the game. And hates the net connection.

  要不是这xx网络让我两局掉线一次, 我根本不会闲得来写这程序玩
+ *Leanny* ([[https://github.com/Leanny/splat3][splat3]])

  lots of useful resources

  大佬解包了很多的资源
+ *North-West-Wind* ([[https://github.com/North-West-Wind/splatoon3-fonts][splatoon3-fonts]])

  the Splatoon 3 fonts resouces

  Splatoon 3 的字体来自这位大佬的解包
+ *Inkipedia* ([[https://splatoonwiki.org/][url]])

  great Splatoon Wiki

  好东西
+ 鱿章语 (WeChat Miniprogram 微信小程序)

  likely functionality

  微信有个小程序叫鱿章语和 IIIIka 的功能类似
  # Note by redbook user: momo
+ all the players

  thank you all for your ikasu name

  爆笑命名, 能忍住不笑的是人才
